version: 2
models:
  - name: product_prices_odm
    description: Текущие цены на продукты
    custom_sql:
    infra: pg
    source: ozon
    source_schema: odm
    source_table: product_prices_odm
    load_start_date: '2024-06-06'
    schedule: 0 2 * * *
    load_type: T-1
    depends_on: # Необходимо создать inlets datasets {{ source_schema }}_{{ model }}
      - stg_stg_prices
    affects_to: True # после успешной отработки создать\обновить датасет, триггер для других
    post_dq: # формирование выходных проверок для расчета
      - uniq__transaction_pk:
          type: check
          description: Отсутствие дубликатов по PK
          sql: "SELECT count(1) = count(distinct product_pk) 
          FROM odm.product_prices_odm"
          mode: query # режим выполнения DQ: query: запуск указанного кода и проверка результата без сохранения
          # table: сохранение результата в таблицу. Дефолт: query
          # куда сохранять результаты - это договоренность (типа Postgres или Clickhouse)
          # Для table необходимо создать файл модели с неймингом post(pre)_dq___dq_name___source_table
          # Пример: post_dq___deviation_cnt__posting_item_odm___posting_item_odm
    alerting_chat_id: -1002165384587
    alerting_secret_name: home_urevoleg_alerting_bot_token
    columns:
      - name: transaction_pk
        data_type: bigserial
        description: 'Уникальный идентификатор: transaction_pk'
        type: PK
        original_name: transaction_pk